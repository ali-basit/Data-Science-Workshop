library(shinydashboard)
library(leaflet)
library(RMySQL)
library(data.table)
library(lubridate)
library(DT)

serviceColor=function(service){
  if(service=="Pothole"){
    "black"
  }
  else{
    "green"
  }
}

ui <- dashboardPage(
  dashboardHeader(title = "311 Requests"),
  dashboardSidebar(),
  dashboardBody(
    # Boxes need to be put in a row (or column)
    fluidRow(box(leafletOutput("mymap"),width = 12)),
    fluidRow(box(dataTableOutput('statsout')),
             box(uiOutput("select")))
  )
)

server <- function(input, output) {
  points <- reactive({
    
    mydb = dbConnect(MySQL(), user='root', password='pass123', dbname='cityopendata', host='localhost')
    
    rs = dbSendQuery(mydb, "select * from 311data")
    data = data.table(fetch(rs, n=-1))
    data=unique(data)
    
    data$expected_datetime=ymd_hms(data$expected_datetime)
    data$requested_datetime=ymd_hms(data$requested_datetime)
    data$updated_datetime=ymd_hms(data$updated_datetime)
    
    table(data$service_name)
    data$service_general="Graffiti"
    data$service_general[grep(pattern = "hole",data$service_name)]="Pothole"
    data=data[!is.na(data$lat)]
  })
  
stats=reactive({
  points()[,.(Count=.N),.(Service=service_name,Status=status)]
})
  
output$statsout = DT::renderDataTable(stats())

output$select=renderUI({selectInput("select", label = h3("Select box"), 
            choices = unique(stats()$Service),selected="Graffiti")})

  output$mymap <- renderLeaflet({
    leaflet() %>%
      addTiles() %>%
      addCircleMarkers(data =points()[service_name==input$select],color = serviceColor(~service_general),clusterOptions = markerClusterOptions())
  })
}

shinyApp(ui, server)